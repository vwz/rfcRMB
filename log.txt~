1) only init RBM (lambda1=100, maxepoch=20), then train SVM (with C=1, e=0.1)
distance A = 
    1.5984

distance B = 
   19.9105

acc A = 
    0.7336
    0.9112
    0.9131
    0.9776
    0.9879
    0.9879
    0.9944
    0.9972
    0.9972
    0.9981

acc B =
    0.0402
    0.1215
    0.1271
    0.2243
    0.2963
    0.3009
    0.3514
    0.4075
    0.4243
    0.4720
The mean error distance of device B seems very bad. Much worse than the regression model -- this means, the new features are still biased to device A.
Besides, it is very slow, it seems after RBM, the data become unseparable.

2) Original MSR regression (except fixing the gradient part)
accuracy of A:
    0.1364

    0.3766

    0.6355

    0.7897

    0.8720

    0.9206

    0.9355

    0.9579

    0.9720

    0.9785

accuracy of B:
    0.0318

    0.1103

    0.2383

    0.3766

    0.5327

    0.6280

    0.7206

    0.7925

    0.8439

    0.8804


errdistA =

    3.0600


errdistB =

    5.7653

In this case, errdistB seems much better; however, errdistA is significantly worse. This means, it is likely that such a regression model will not be accurate any way. 


3) only init RBM (lambda1=1000, maxepoch=20), then train SVM (with C=10, e=0.1)

distance A = 
    2.2716

distance B = 
   22.8348

acc A =
    0.7308
    0.9084
    0.9084
    0.9757
    0.9832
    0.9832
    0.9879
    0.9897
    0.9897
    0.9907

acc B =
    0.0318
    0.1009
    0.1093
    0.1981
    0.2589
    0.2682
    0.3224
    0.3757
    0.3869
    0.4206

4) only init RBM (lambda1=20, maxepoch=50, momentum=0.9 after maxepoch-5), then train SVM (with C=10, e=0.1)

distance A = 
    3.5121

distance B = 
   23.5167

acc A =
    0.7290
    0.9168
    0.9168
    0.9636
    0.9822
    0.9822
    0.9850
    0.9860
    0.9860
    0.9860

acc B =
    0.0224
    0.0953
    0.1000
    0.1925
    0.2757
    0.2841
    0.3495
    0.3776
    0.3944
    0.4393

5) only init RBM (lambda1=20, maxepoch=100, momentum=0.9 after maxepoch-5), then train TSVM (with C=100, e=0.1)
no result

6) only init RBM (lambda1=20, maxepoch=5000, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM (with C=100, e=0.1) with device A
distance = 
   23.6642

distance = 
   29.1426

acc A =
    0.4290
    0.5421
    0.5421
    0.5720
    0.6037
    0.6037
    0.6093
    0.6234
    0.6421
    0.6579

acc B = 
    0.0140
    0.0692
    0.0692
    0.1150
    0.1477
    0.1477
    0.1916
    0.2411
    0.2654
    0.3093

7) only init RBM (lambda1=100, maxepoch=2000, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM (with C=100, e=0.1) with device A
distance A = 
    4.5140

distance B = 
   26.6249

acc A = 
    0.6813
    0.8813
    0.8832
    0.9374
    0.9645
    0.9645
    0.9664
    0.9664
    0.9664
    0.9701

acc B =
    0.0187
    0.0505
    0.0626
    0.0972
    0.1318
    0.1402
    0.2047
    0.2607
    0.2944
    0.3243

7) only init RBM (lambda1=100, maxepoch=200, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM (with C=100, e=0.1) with device A
distance A = 
    3.2985

distance B = 
   18.5795

acc A =
    0.5785
    0.8075
    0.8121
    0.8822
    0.9271
    0.9280
    0.9374
    0.9514
    0.9551
    0.9682

acc B =
    0.0299
    0.0963
    0.1009
    0.1766
    0.2533
    0.2561
    0.3346
    0.4037
    0.4056
    0.4589

7) only init RBM (lambda1=100, maxepoch=200, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM with device A, libsvm
distance A = 
    1.9531

distance B = 
   11.1618

acc A =
    0.6103
    0.8626
    0.8692
    0.9327
    0.9617
    0.9626
    0.9776
    0.9907
    0.9907
    1.0000

acc B =
    0.0841
    0.2505
    0.2822
    0.4121
    0.4991
    0.4991
    0.5794
    0.6654
    0.6822
    0.7495

8) only init RBM (lambda1=100, maxepoch=200, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM (c=100) with device A, libsvm
distance = 
    1.8846

distance = 
   11.2415

acc A =
    0.6290
    0.8757
    0.8757
    0.9364
    0.9645
    0.9654
    0.9813
    0.9907
    0.9907
    1.0000

acc B =
    0.0785
    0.2262
    0.2477
    0.3729
    0.4720
    0.4720
    0.5589
    0.6364
    0.6458
    0.7299

9) only init RBM (lambda1=100, maxepoch=200, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM (rbf kernel) with device A, libsvm
distance = 
    1.9134

distance = 
   11.0467

acc A =
    0.6028
    0.8607
    0.8673
    0.9383
    0.9654
    0.9664
    0.9794
    0.9916
    0.9916
    1.0000

acc B =
    0.0944
    0.2570
    0.2888
    0.4168
    0.5047
    0.5047
    0.5822
    0.6692
    0.6860
    0.7523

10) only init RBM (lambda1=100, maxepoch=2000, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM with device A, libsvm
distance = 
    1.0784

distance = 
   11.3703

acc A =
    0.6925
    0.9458
    0.9458
    0.9907
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000

acc B =
    0.1037
    0.2832
    0.2953
    0.4383
    0.5449
    0.5458
    0.6224
    0.7037
    0.7196
    0.7794

11) only init RBM (lambda1=100, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50), then train SVM with device A, libsvm
distance = 
    1.0457

distance = 
   12.0648

acc A =
    0.7794
    0.9439
    0.9439
    0.9832
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000

acc B =
    0.1290
    0.3178
    0.3252
    0.4916
    0.6028
    0.6056
    0.6888
    0.7523
    0.7636
    0.8028

11) only init RBM (lambda1=100, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50, init momentum=0.25), then train SVM with device A, libsvm
distance = 
    1.1664

distance = 
    9.7489

acc A =
    0.7617
    0.9196
    0.9196
    0.9879
    0.9935
    0.9935
    0.9991
    0.9991
    0.9991
    1.0000

acc B =
    0.1383
    0.3757
    0.3879
    0.5495
    0.6729
    0.6785
    0.7495
    0.8140
    0.8196
    0.8514

11) only init RBM (lambda1=20, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50, init momentum=0.25), then train SVM with device A, libsvm
distance = 
    1.1176

distance = 
   12.0845

acc A =
    0.7570
    0.9374
    0.9374
    0.9804
    0.9963
    0.9963
    1.0000
    1.0000
    1.0000
    1.0000

acc B =
    0.1121
    0.3355
    0.3467
    0.4748
    0.6131
    0.6150
    0.7150
    0.7776
    0.7822
    0.8150

11) only init RBM (lambda1=20, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50, init momentum=0.25), then train SVM ('CostFactor', j_value, 'maxIter', 100) with device A, svmlight
distance = 
    1.2364

distance = 
   11.8234

    0.7542
    0.9374
    0.9374
    0.9738
    0.9907
    0.9907
    0.9972
    0.9981
    1.0000
    1.0000

    0.0626
    0.2028
    0.2047
    0.3327
    0.4421
    0.4523
    0.5383
    0.5991
    0.6159
    0.6523

12) only init RBM (lambda1=20, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50, init momentum=0.25), then train SVM ('CostFactor', j_value, 'maxIter', 1000) with device A, svmlight
distance = 
   17.7251

distance = 
   41.2520

    0.6290
    0.7794
    0.7794
    0.8140
    0.8327
    0.8327
    0.8327
    0.8327
    0.8327
    0.8327

    0.0112
    0.0299
    0.0299
    0.0486
    0.0579
    0.0579
    0.0682
    0.0776
    0.0776
    0.0869

13) only init RBM (lambda1=20, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50, init momentum=0.25), then train SVM ('CostFactor', 1, 'maxIter', 100) with device A, svmlight
when j-value = 1, the results are completely biased to negative examples

14) only init RBM (lambda1=20, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50, init momentum=0.25), then train SVM ('CostFactor', j_value, 'maxIter', 100, 'CacheSize', 500, 'NewVariables', 2, 'EpsTermin', 0.01, 'C', 1) with device A, svmlight
distance = 
   32.1766

distance = 
   32.1766

    0.0093
    0.0280
    0.0280
    0.0374
    0.0467
    0.0467
    0.0561
    0.0654
    0.0654
    0.0935

    0.0093
    0.0280
    0.0280
    0.0374
    0.0467
    0.0467
    0.0561
    0.0654
    0.0654
    0.0935

15) only init RBM (lambda1=20, maxepoch=8000, steplen=0.0001, momentum=0.9 after maxepoch-50, init momentum=0.25), then train SVM ('CostFactor', j_value, 'maxIter', 100, 'CacheSize', 500, 'EpsTermin', 0.01, 'C', 1) with device A, svmlight

distance = 
    8.4610

distance = 
   21.0793

    0.6991
    0.8832
    0.8832
    0.9234
    0.9308
    0.9308
    0.9346
    0.9364
    0.9364
    0.9374

    0.0486
    0.1486
    0.1505
    0.2234
    0.2925
    0.3037
    0.3495
    0.3776
    0.3832
    0.4280

16) only init RBM (same as 15), then train lapsvm (primal, newton) with only 5 unlabeled data, one-vs-one setting
acc1 =

    0.6318
    0.8486
    0.8486
    0.9065
    0.9308
    0.9327
    0.9374
    0.9477
    0.9495
    0.9495


acc2 =

    0.0178
    0.0710
    0.0720
    0.1178
    0.1673
    0.1682
    0.1972
    0.2308
    0.2336
    0.2673

17) only init RBM, then train lapsvm (primal, pcg, gamma_A = 1, gamma_I = 1e-5) with only 5 unlabeled data, one-vs-one setting
distance = 
    3.1664

    0.6467
    0.8822
    0.8822
    0.9318
    0.9598
    0.9598
    0.9664
    0.9785
    0.9804
    0.9822

distance = 
   24.5493

    0.0308
    0.0963
    0.0963
    0.1533
    0.2234
    0.2318
    0.2748
    0.3215
    0.3327
    0.3738

18) only init RBM, then train lapsvm (primal, newton, gamma_A = 10, gamma_I = 1e-5) with only 5 unlabeled data, one-vs-one setting
distance = 
   10.8751

    0.6028
    0.7907
    0.7972
    0.8486
    0.8682
    0.8682
    0.8729
    0.8738
    0.8766
    0.8766

distance = 
   30.5093

distance = 
   30.5093

    0.0150
    0.0523
    0.0523
    0.0860
    0.1121
    0.1150
    0.1495
    0.1766
    0.1869
    0.2000

19) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 1e-5) with only 5 unlabeled data, one-vs-one setting
distance = 
    2.6078

    0.6570
    0.8673
    0.8673
    0.9252
    0.9561
    0.9579
    0.9626
    0.9776
    0.9794
    0.9794

distance = 
   26.0256

    0.0215
    0.0813
    0.0813
    0.1383
    0.2112
    0.2131
    0.2467
    0.2860
    0.2888
    0.3168

19) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 1e-2) with only 5 unlabeled data, one-vs-one setting
distance = 
    1.1120

    0.7495
    0.9411
    0.9411
    0.9794
    0.9972
    0.9972
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
    8.9456

    0.1243
    0.3252
    0.3308
    0.4673
    0.5897
    0.5897
    0.6692
    0.7495
    0.7692
    0.7991

20) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 1e-0) with only 5 unlabeled data, one-vs-one setting
distance = 
    1.1120

    0.7495
    0.9411
    0.9411
    0.9794
    0.9972
    0.9972
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
    8.9456

    0.1243
    0.3252
    0.3308
    0.4673
    0.5897
    0.5897
    0.6692
    0.7495
    0.7692
    0.7991

21) only init RBM, then train lapsvm (primal, newton, gamma_A = 1, gamma_I = 1e-2) with only 5 unlabeled data, one-vs-one setting
distance = 
    1.1510

    0.7336
    0.9318
    0.9318
    0.9804
    0.9972
    0.9972
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
   10.2844

    0.1224
    0.3075
    0.3103
    0.4271
    0.5477
    0.5523
    0.6290
    0.6907
    0.7084
    0.7346

21) only init RBM, then train lapsvm (primal, newton, gamma_A = 1, gamma_I = 1e-0) with only 5 unlabeled data, one-vs-one setting
distance = 
    1.0967

    0.7682
    0.9439
    0.9439
    0.9757
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
    9.7546

    0.1364
    0.3346
    0.3449
    0.4972
    0.6047
    0.6056
    0.6794
    0.7477
    0.7561
    0.7916

22) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 10) with only 5 unlabeled data, one-vs-one setting
distance = 
    1.1034

    0.7748
    0.9402
    0.9402
    0.9766
    0.9972
    0.9972
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
   11.3013

    0.1355
    0.3505
    0.3617
    0.5000
    0.6308
    0.6346
    0.7187
    0.7841
    0.7897
    0.8271

22) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 100) with only 5 unlabeled data, one-vs-one setting
distance = 
    1.1261

    0.7692
    0.9383
    0.9383
    0.9757
    0.9963
    0.9963
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
   11.3376

    0.1383
    0.3533
    0.3664
    0.5000
    0.6336
    0.6355
    0.7215
    0.7860
    0.7907
    0.8308

23) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 1) with all unlabeled data, one-vs-one setting
distance = 
    1.0754

    0.7720
    0.9421
    0.9421
    0.9776
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
   11.2909

    0.1374
    0.3607
    0.3738
    0.5112
    0.6467
    0.6495
    0.7159
    0.7766
    0.7841
    0.8178

24) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 10) with all unlabeled data, one-vs-one setting
distance = 
    1.1034

    0.7710
    0.9393
    0.9393
    0.9766
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
    9.8088

    0.1374
    0.3673
    0.3804
    0.5093
    0.6617
    0.6645
    0.7439
    0.8140
    0.8206
    0.8617

24) only init RBM, then train lapsvm (primal, newton, gamma_A = 0.1, gamma_I = 100) with all unlabeled data, one-vs-one setting
distance = 
    1.1279

    0.7673
    0.9383
    0.9383
    0.9757
    0.9963
    0.9963
    1.0000
    1.0000
    1.0000
    1.0000

distance = 
   10.3469

    0.1393
    0.3645
    0.3766
    0.5159
    0.6533
    0.6551
    0.7430
    0.8093
    0.8150
    0.8533

25) joint rbm-lapsvm

training iteration 5
acc1 =

    0.8009
    0.9579
    0.9579
    0.9888
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000


acc2 =

    0.1402
    0.3421
    0.3570
    0.5206
    0.6196
    0.6271
    0.7000
    0.7383
    0.7421
    0.7944

training iteration 0
acc1 = 
    0.7710
    0.9374
    0.9374
    0.9766
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000

acc2 = 
    0.1336
    0.3607
    0.3720
    0.5075
    0.6486
    0.6514
    0.7252
    0.7953
    0.8037
    0.8308

training iteration 1
acc1 =
    0.7645
    0.9393
    0.9393
    0.9766
    0.9953
    0.9953
    1.0000
    1.0000
    1.0000
    1.0000

acc2 = 
    0.1533
    0.3505
    0.3645
    0.5280
    0.6495
    0.6542
    0.7336
    0.7925
    0.7963
    0.8514

training iteration 2
acc 1 = 
    0.7925
    0.9664
    0.9664
    0.9963
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000

acc 2 =
    0.1402
    0.3336
    0.3486
    0.5150
    0.6383
    0.6421
    0.7187
    0.7720
    0.7757
    0.8393

training iteration 3
acc 1 =
    0.7897
    0.9561
    0.9561
    0.9879
    0.9963
    0.9963
    1.0000
    1.0000
    1.0000
    1.0000

acc 2 = 
    0.1402
    0.3533
    0.3692
    0.5159
    0.6327
    0.6383
    0.7028
    0.7776
    0.7822
    0.8355

training iteration 4
acc 1 =
    0.8178
    0.9710
    0.9710
    0.9953
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000

acc 2 = 
    0.1598
    0.3598
    0.3729
    0.5150
    0.6243
    0.6299
    0.6925
    0.7486
    0.7523
    0.8065

26) joint lapsvm and rbm
iteration 5
acc1 =

    0.7860
    0.9486
    0.9486
    0.9879
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000


acc2 =

    0.1682
    0.3748
    0.3841
    0.5093
    0.6234
    0.6299
    0.6916
    0.7467
    0.7486
    0.7953

iteration 0
acc1 =
   0.7710
    0.9374
    0.9374
    0.9766
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000

acc2 =
  0.1336
    0.3607
    0.3720
    0.5075
    0.6486
    0.6514
    0.7252
    0.7953
    0.8037
    0.8308

iteration 1
acc1 = 
    0.7617
    0.9383
    0.9383
    0.9785
    0.9953
    0.9953
    1.0000
    1.0000
    1.0000
    1.0000

acc2 = 
    0.1514
    0.3523
    0.3673
    0.5234
    0.6458
    0.6523
    0.7308
    0.7916
    0.7953
    0.8523

iteration 2
acc1 = 
    0.8084
    0.9598
    0.9598
    0.9916
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000

acc2 = 
    0.1421
    0.3411
    0.3645
    0.5131
    0.6327
    0.6374
    0.7215
    0.7813
    0.7907
    0.8355

iteration 3
acc1 = 
    0.7813
    0.9636
    0.9636
    0.9963
    0.9991
    0.9991
    1.0000
    1.0000
    1.0000
    1.0000

acc2 = 
    0.1383
    0.3598
    0.3738
    0.5131
    0.6346
    0.6393
    0.7075
    0.7710
    0.7794
    0.8308

27) joint lapsvm and rbm, 'lambda1', 100, 'lambda2', 10, 'NN', 2, rbmtrain.finalmomentum = 0.25

iter 6
acc1 =

    0.8065
    0.9551
    0.9551
    0.9897
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000


acc2 =

    0.1458
    0.3458
    0.3589
    0.5093
    0.6280
    0.6364
    0.7028
    0.7439
    0.7477
    0.7991

iter = 1
acc1 = 
 0.7710
    0.9374
    0.9374
    0.9766
    0.9981
    0.9981
    1.0000
    1.0000
    1.0000
    1.0000

acc2 =
    0.1336
    0.3607
    0.3720
    0.5075
    0.6486
    0.6514
    0.7252
    0.7953
    0.8037
    0.8308

iter = 2
acc1 = 
    0.7589
    0.9439
    0.9439
    0.9804
    0.9953
    0.9953
    1.0000
    1.0000
    1.0000
    1.0000

acc2 = 
    0.1467
    0.3523
    0.3645
    0.5196
    0.6421
    0.6477
    0.7299
    0.7888
    0.7925
    0.8505

iter = 3
acc1 = 
    0.7776
    0.9645
    0.9645
    0.9953
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000
    1.0000

acc2 = 
    0.1439
    0.3336
    0.3523
    0.5178
    0.6439
    0.6486
    0.7262
    0.7850
    0.7888
    0.8495

28) joint
params = struct('maxepoch', 2, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 50, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 0.1, ... 
		 'samplerate', 0.01);

>> acc2set{1}

ans =

    0.1383
    0.3888
    0.3991
    0.5234
    0.6178
    0.6187
    0.7140
    0.7570
    0.7636
    0.8056

>> acc2set{2}

ans =

    0.1355
    0.3869
    0.4000
    0.5252
    0.6252
    0.6262
    0.7187
    0.7626
    0.7701
    0.8103

>> acc2set{3}

ans =

    0.1411
    0.3925
    0.4047
    0.5243
    0.6299
    0.6308
    0.7234
    0.7673
    0.7720
    0.8103

29) joint
params = struct('maxepoch', 2, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 50, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 100, ... 
		 'samplerate', 0.01);

>> acc2set{1}

ans =

    0.1383
    0.3850
    0.3972
    0.5243
    0.6262
    0.6271
    0.7206
    0.7636
    0.7701
    0.8075

>> acc2set{2}

ans =

    0.1421
    0.3944
    0.4075
    0.5346
    0.6355
    0.6364
    0.7271
    0.7664
    0.7710
    0.8084

>> acc2set{3}

ans =

    0.1393
    0.3935
    0.4037
    0.5290
    0.6308
    0.6318
    0.7252
    0.7673
    0.7738
    0.8131

30) joint
params = struct('maxepoch', 2, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 50, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 1000, ... 
		 'samplerate', 0.01);

>> acc2set{1}

ans =

    0.1411
    0.3916
    0.4009
    0.5280
    0.6290
    0.6299
    0.7252
    0.7664
    0.7729
    0.8103

>> acc2set{2}

ans =

    0.1402
    0.3925
    0.4028
    0.5299
    0.6318
    0.6327
    0.7271
    0.7673
    0.7738
    0.8112

>> acc2set{3}

ans =

    0.1393
    0.3944
    0.4065
    0.5346
    0.6383
    0.6393
    0.7336
    0.7710
    0.7776
    0.8150

31) joint
params = struct('maxepoch', 2, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 50, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 0, ... 
		 'samplerate', 0.01);

>> acc2set{1}

ans =

    0.1393
    0.3925
    0.4028
    0.5234
    0.6224
    0.6234
    0.7178
    0.7617
    0.7682
    0.8065

>> acc2set{2}

ans =

    0.1393
    0.3888
    0.3991
    0.5206
    0.6215
    0.6224
    0.7206
    0.7636
    0.7701
    0.8103

>> acc2set{3}

ans =

    0.1449
    0.3907
    0.4009
    0.5271
    0.6299
    0.6308
    0.7252
    0.7664
    0.7729
    0.8103

32) joint
>> acc2set{1}

ans =

    0.1346
    0.3879
    0.4000
    0.5178
    0.6187
    0.6196
    0.7150
    0.7570
    0.7636
    0.8084

>> acc2set{2}

ans =

    0.1430
    0.3925
    0.4028
    0.5234
    0.6234
    0.6243
    0.7187
    0.7589
    0.7636
    0.8065

>> acc2set{3}

ans =

    0.1411
    0.3953
    0.4056
    0.5271
    0.6299
    0.6308
    0.7215
    0.7636
    0.7701
    0.8093


31) joint, rbmtrain, momentum=0.9
params = struct('maxepoch', 2, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 200, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 0, ... 
		 'samplerate', 0.01);

>> acc2set{1}

ans =

    0.1364
    0.3346
    0.3393
    0.4748
    0.5813
    0.5907
    0.6813
    0.7523
    0.7607
    0.8168

>> acc2set{2}

ans =

    0.1411
    0.3561
    0.3598
    0.4850
    0.5897
    0.6000
    0.6944
    0.7589
    0.7673
    0.8075

>> acc2set{3}

ans =

    0.1393
    0.3430
    0.3458
    0.4907
    0.5888
    0.5944
    0.6897
    0.7607
    0.7645
    0.8037

32) joint, rbmtrain, momentum=0.9
params = struct('maxepoch', 2, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 200, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 100, ... 
		 'samplerate', 0.01);

>> acc2set{1}

ans =

    0.1383
    0.3439
    0.3486
    0.4860
    0.5963
    0.6047
    0.6972
    0.7617
    0.7692
    0.8215

>> acc2set{2}

ans =

    0.1514
    0.3607
    0.3701
    0.5159
    0.6449
    0.6505
    0.7271
    0.7720
    0.7785
    0.8150

>> acc2set{3}

ans =

    0.1449
    0.3682
    0.3748
    0.5178
    0.6346
    0.6402
    0.7187
    0.7636
    0.7710
    0.8037


40) params = struct('maxepoch', 10, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 200, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 10, ... 
		 'samplerate', 0.01);

>> load accset_lambda2_10.mat             
>> acc2set{1}

ans =

    0.1355
    0.3421
    0.3467
    0.4785
    0.5888
    0.5981
    0.6981
    0.7645
    0.7729
    0.8224

>> acc2set{2}

ans =

    0.1364
    0.3561
    0.3626
    0.4879
    0.5850
    0.5925
    0.6794
    0.7514
    0.7579
    0.8019

>> acc2set{3}

ans =

    0.1383
    0.3673
    0.3738
    0.5075
    0.6056
    0.6112
    0.6860
    0.7579
    0.7617
    0.8019

41) params = struct('maxepoch', 10, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 200, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 10, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 100, ... 
		 'samplerate', 0.01);

>> load accset_momentum_02.mat              
>> acc2set{1}

ans =

    0.1355
    0.3374
    0.3421
    0.4822
    0.5869
    0.5963
    0.6916
    0.7542
    0.7626
    0.8103

>> acc2set{2}

ans =

    0.1570
    0.3729
    0.3813
    0.5065
    0.6159
    0.6206
    0.7131
    0.7636
    0.7654
    0.8056

>> acc2set{3}

ans =

    0.1458
    0.3748
    0.3850
    0.5009
    0.6140
    0.6187
    0.7112
    0.7654
    0.7682
    0.8028

42) params = struct('maxepoch', 10, ...
                 'maxepoch_rbm_noinit', 3000, ...
                 'maxepoch_rbm_init', 200, ...
                 'numhid', 100, ...
                 'gammaI', 0.1, ... 
                 'gammaA', 100, ...
		 'NN', 2, ...
                 'lambda1', 100, ...
                 'lambda2', 10, ... 
		 'samplerate', 0.01);

>> acc2set{1}

ans =

    0.1290
    0.3393
    0.3449
    0.4626
    0.5720
    0.5785
    0.6738
    0.7383
    0.7467
    0.8019

>> acc2set{2}

ans =

    0.1421
    0.3533
    0.3589
    0.4776
    0.5813
    0.5869
    0.6822
    0.7505
    0.7579
    0.7963

>> acc2set{3}

ans =

    0.1364
    0.3551
    0.3617
    0.4869
    0.5925
    0.6000
    0.6766
    0.7477
    0.7514
    0.7953

